version: "3.9"

name: gitea-mcp-local

services:
  db:
    image: postgres:16-alpine
    container_name: gitea-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - gitea-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 30

  gitea:
    image: docker.gitea.com/gitea:1
    container_name: gitea
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - USER_UID=1000
      - USER_GID=1000
      # Server/base
      - GITEA__server__ROOT_URL=${GITEA_ROOT_URL}
      - GITEA__server__SSH_DOMAIN=localhost
      - GITEA__server__SSH_PORT=${SSH_PORT}
      # Database (PostgreSQL)
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=db:${POSTGRES_PORT}
      - GITEA__database__NAME=${POSTGRES_DB}
      - GITEA__database__USER=${POSTGRES_USER}
      - GITEA__database__PASSWD=${POSTGRES_PASSWORD}
      - GITEA__database__SSL_MODE=disable
      # Security/setup
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__service__DISABLE_REGISTRATION=true
      # Actions
      - GITEA__actions__ENABLED=true
      - GITEA__actions__DEFAULT_ACTIONS_URL=github
    volumes:
      - gitea-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${HTTP_PORT:-3000}:3000"
      - "${SSH_PORT:-2222}:22"
    networks:
      - gitea-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 60

  mcp:
    image: gitea/gitea-mcp-server:latest
    container_name: gitea-mcp
    restart: unless-stopped
    depends_on:
      gitea:
        condition: service_healthy
    environment:
      - GITEA_HOST=http://gitea:3000
      - GITEA_ACCESS_TOKEN=${GITEA_TOKEN}
    command: ["/app/gitea-mcp", "-t", "sse", "-host", "http://gitea:3000", "-token", "${GITEA_TOKEN}", "-port", "8080"]
    ports:
      - "${MCP_PORT:-8081}:8080"
    networks:
      - gitea-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 30

  runner:
    build:
      context: .
      dockerfile: Dockerfile.runner
    container_name: gitea-runner
    restart: unless-stopped
    depends_on:
      gitea:
        condition: service_healthy
    environment:
      - CONFIG_FILE=/config.yaml
      - GITEA_INSTANCE_URL=http://gitea:3000
      - GITEA_RUNNER_REGISTRATION_TOKEN=${GITEA_RUNNER_TOKEN}
      - GITEA_RUNNER_NAME=claude-code-runner
      - PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - runner-data:/data
    networks:
      - gitea-network
    privileged: true

  code-review:
    build:
      context: .
      dockerfile: Dockerfile.codereview
    container_name: code-review-service
    restart: unless-stopped
    depends_on:
      gitea:
        condition: service_healthy
    ports:
      - "5001:5000"
    networks:
      - gitea-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  gitea-data:
  pgdata:
  runner-data:

networks:
  gitea-network:
    driver: bridge
    name: gitea-network
